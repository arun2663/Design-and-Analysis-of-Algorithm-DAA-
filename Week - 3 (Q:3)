/*
Given an unsorted array of positive integers, design an algorithm and implement it using a program to find whether there are any duplicate elements in the array or not. (use sorting) (Time Complexity = O(n log n))
Input Format: The first line contains number of test cases, T. For each test case, there will be two input lines. First line contains n (the size of array). Second line contains space-separated integers describing array.
Output Format: The output will have T number of lines. For each test case, output will be 'YES' if duplicates are present otherwise ‘NO’.
*/
#include<iostream>
#include<math.h>
#include<bits/stdc++.h>
using namespace std;
bool duplicates(int a[],int n)
{
    sort(a,a+n);
    int c=0;
    for(int i=0;i<n-1;i++)
    {
        if(a[i]==a[i+1])
        {
            return true;
        }
    }
    return false;
}
int main()
{
    int n,i,t,key,shift=0,comparisons=0;
    cout<<"Input no of test cases"<<endl;
    cin>>t;
    while(t--)
    {
        cout<<"Input size of array"<<endl;
        cin>>n;
        int a[n];
        cout<<"Input elements in an array"<<endl;
        for(i=0;i<n;i++)
        {
            cin>>a[i];
        }
        if(duplicates(a,n))
            cout<<"Yes"<<endl;
        else
            cout<<"No"<<endl;
    }
}

